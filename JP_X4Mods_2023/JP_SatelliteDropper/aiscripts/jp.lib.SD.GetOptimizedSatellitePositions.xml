<?xml version="1.0" encoding="utf-8"?>

<aiscript name="jp.lib.SD.GetOptimizedSatellitePositions" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="aiscripts.xsd">

   <params>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
      <param name="OBJECTS" default="[]"/>
      <param name="PLACE_SATELLITES_MK1" default="true"/>
      <param name="PLACE_SATELLITES_MK2" default="false"/>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
      <param name="debugchance" default="0"/>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
   </params>

   <init>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
      <set_value name="$_Ship" exact="this.ship"/>
      <set_value name="$_DefaultOrderParamRef" exact="if $_Ship.defaultorder.id == 'Assist' then $_Ship.commander.defaultorder else $_Ship.defaultorder"/>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
      <create_list name="$_SatelliteMacros"/>
      <append_to_list name="$_SatelliteMacros" exact="ware.satellite_mk2.objectmacro" chance="if $PLACE_SATELLITES_MK2 then 100 else 0"/>
      <append_to_list name="$_SatelliteMacros" exact="ware.satellite_mk1.objectmacro" chance="if $PLACE_SATELLITES_MK1 then 100 else 0"/>
      <create_list name="$_SatelliteRadarRanges"/>
      <append_to_list name="$_SatelliteRadarRanges" exact="75km" chance="if $PLACE_SATELLITES_MK2 then 100 else 0"/>
      <append_to_list name="$_SatelliteRadarRanges" exact="30km" chance="if $PLACE_SATELLITES_MK1 then 100 else 0"/>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
      <set_value   name="$_SatelliteMacroToUse" exact="$_SatelliteMacros.{1}"/>
      <set_value   name="$_MostCoveringObject" exact="null"/>
      <create_list name="$_MostCoveringObjectObjects"/>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
      <set_value name="$DEBUG" exact="@$_DefaultOrderParamRef.$DEBUG"/>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
      <do_if value="$DEBUG gt 0">
         <set_value name="$_DebugFolderName" exact="@$_DefaultOrderParamRef.$DEBUG_FOLDER_NAME"/>
         <set_value name="$_DebugScriptName" exact="'jp.lib.SD.GetOptimizedSatellitePositions'"/>
         <set_value name="$_DebugFileName" exact="$_Ship.idcode + '.' + $_DebugScriptName + '.xml.log'"/>
      </do_if>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
   </init>

   <attention min="unknown">
      <actions>

         <label name="INIT_LBL"/>
         <wait exact="1ms"/>
         <do_if value="$DEBUG gt 0">
            <debug_to_file directory="$_DebugFolderName" name="$_DebugFileName" text="'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~'" append="false"/>
            <debug_to_file directory="$_DebugFolderName" name="$_DebugFileName" text="'[' + player.systemtime.{'%F - %X'} + '] ' + '~~ ' + $_DebugScriptName + '.xml ~ SCRIPT_START ~~' + '\n'"/>
         </do_if>

         <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->

         <set_command command="command.scan"/>
         <set_command_action commandaction="commandaction.calculating"/>

         <do_for_each name="$_SatelliteMacro" in="$_SatelliteMacros" counter="$_ActualSatelliteMacroIteration">
            <set_value name="$_SatelliteRadarRange" exact="$_SatelliteRadarRanges.{$_ActualSatelliteMacroIteration}"/>
            <set_value name="$_SatelliteMacroToUse" exact="$_SatelliteMacro"/>

            <set_value name="$_MostCoveringObject" exact="$OBJECTS.{1}"/>
            <clear_list list="$_MostCoveringObjectObjects"/>
            <set_value name="$_TotalDistance" exact="0"/>

            <do_for_each name="$_Object" in="$OBJECTS">
               <create_list name="$_ObjectsInRange"/>
               <set_value name="$_TempTotalDistance" exact="0"/>
               <do_for_each name="$_PotentialObject" in="$OBJECTS">
                  <do_if value="$_PotentialObject != $_Object and $_Object.distanceto.{$_PotentialObject} lt $_SatelliteRadarRange">
                     <append_to_list name="$_ObjectsInRange" exact="$_PotentialObject"/>
                     <set_value name="$_TempTotalDistance" exact="$_Object.distanceto.{$_PotentialObject}" operation="add"/>
                  </do_if>
               </do_for_each>
               <do_if value="$_ObjectsInRange.count gt $_MostCoveringObjectObjects.count or
                            ($_ObjectsInRange.count == $_MostCoveringObjectObjects.count and 
                             $_TempTotalDistance lt $_TotalDistance)">
                  <set_value name="$_MostCoveringObject" exact="$_Object"/>
                  <set_value name="$_MostCoveringObjectObjects" exact="$_ObjectsInRange"/>
                  <set_value name="$_TotalDistance" exact="$_TempTotalDistance"/>
               </do_if>
            </do_for_each>

            <do_if value="$_ActualSatelliteMacroIteration != $_SatelliteMacros.count">
               <!-- Check if next satellite can cover all objects in range of current most covering object -->
               <set_value name="$_CanTheNextSatelliteCoverIt" exact="true"/>
               <set_value name="$_NextSatelliteRadarRange" exact="$_SatelliteRadarRanges.{($_ActualSatelliteMacroIteration + 1)}"/>

               <do_for_each name="$_ObjectInRange" in="$_MostCoveringObjectObjects">
                  <do_if value="$_MostCoveringObject.distanceto.{$_ObjectInRange} gt $_NextSatelliteRadarRange">
                     <set_value name="$_CanTheNextSatelliteCoverIt" exact="false"/>
                     <break/>
                  </do_if>
               </do_for_each>

               <set_value name="$_CanTheNextSatelliteCoverIt" exact="true"/>
               <create_list name="$_TempMostCoveringObjectObjects"/>
               <append_list_elements name="$_TempMostCoveringObjectObjects" other="$_MostCoveringObjectObjects"/>
               <append_to_list name="$_TempMostCoveringObjectObjects" exact="$_MostCoveringObject"/>
               <do_for_each name="$_PotentialCenterObject" in="$_TempMostCoveringObjectObjects">
                  <set_value name="$_CanTheNextSatelliteCoverIt" exact="true"/>
                  <do_for_each name="$_ObjectInRange" in="$_TempMostCoveringObjectObjects">
                     <do_if value="$_PotentialCenterObject.distanceto.{$_ObjectInRange} gt $_NextSatelliteRadarRange">
                        <set_value name="$_CanTheNextSatelliteCoverIt" exact="false"/>
                        <break/>
                     </do_if>
                  </do_for_each>
                  <do_if value="$_CanTheNextSatelliteCoverIt">
                     <set_value name="$_MostCoveringObject" exact="$_PotentialCenterObject"/>
                     <break/>
                  </do_if>
               </do_for_each>

               <do_if value="$_CanTheNextSatelliteCoverIt">
                  <!--<set_value name="$_SatelliteMacroToUse" exact="$_SatelliteMacros.{($_ActualSatelliteMacroIteration + 1)}"/>-->
                  <continue/>
               </do_if>
            </do_if>

            <do_if value="$_MostCoveringObjectObjects.count gt 0">
               <break/>
            </do_if>
         </do_for_each>

         <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->

         <label name="END_LBL"/>
         <wait exact="1ms"/>
         <do_if value="$DEBUG gt 0">
            <debug_to_file directory="$_DebugFolderName" name="$_DebugFileName" text="'[' + player.systemtime.{'%F - %X'} + '] ' + '~~ ' + $_DebugScriptName + '.xml ~ SCRIPT_END ~~'"/>
            <debug_to_file directory="$_DebugFolderName" name="$_DebugFileName" text="'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n'"/>
         </do_if>

         <return value="[$_MostCoveringObject, $_SatelliteMacroToUse]"/>

      </actions>
   </attention>

   <on_abort>
   </on_abort>

</aiscript>