<?xml version="1.0" encoding="utf-8"?>

<aiscript name="jp.lib.Restock" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="aiscripts.xsd">

   <params>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
      <param name="RESTOCK_AMMO_TABLE" default="table[]" comment="Amounts are the amount we want at the end not how many to restock"/>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
      <param name="DEBUG_FOLDER_NAME" default="null"/>
      <param name="DEBUG" default="0"/>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
   </params>

   <init>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
      <set_value name="$_Ship" exact="this.ship"/>
      <set_value name="$_Result" exact="'Idle'"/>
      <set_value name="$_FailedRestockLogTitle" exact="{8888888, 50} + ' ~ ' + '%1 [%2]'.[$_Ship.knownname, $_Ship.idcode]"/>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
      <do_if value="$DEBUG gt 0">
         <set_value name="$_DebugFolderName" exact="$DEBUG_FOLDER_NAME"/>
         <set_value name="$_DebugScriptName" exact="'jp.lib.Restock'"/>
         <set_value name="$_DebugFileName" exact="$_Ship.idcode + '.' + $_DebugScriptName + '.xml.log'"/>
      </do_if>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
   </init>

   <attention min="unknown">
      <actions>

         <label name="INIT_LBL"/>
         <wait exact="1ms"/>
         <do_if value="$DEBUG gt 0">
            <debug_to_file directory="$_DebugFolderName" name="$_DebugFileName" text="'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~'" append="false"/>
            <debug_to_file directory="$_DebugFolderName" name="$_DebugFileName" text="'[' + player.systemtime.{'%F - %X'} + '] ' + '~~ ' + $_DebugScriptName + '.xml ~ SCRIPT_START ~~' + '\n'"/>
         </do_if>

         <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->

         <label name="RESUME_LBL"/>
         <wait exact="1ms"/>

         <set_command command="command.resupply"/>
         <set_command_action commandaction="commandaction.calculating"/>

         <find_station name="$_Stations" space="player.galaxy" multiple="true">
            <match knownto="$_Ship.owner"/>
            <match checkoperational="true"/>
            <match cansupplyclass="$_Ship.class"/>
            <match canequipclass="$_Ship.class"/>
            <match hascontrolentity="controlpost.shiptrader"/>
            <match_relation_to faction="$_Ship.owner" comparison="ge" relation="dock"/>
         </find_station>

         <do_if value="$_Stations.count gt 1">
            <create_list name="$_StationTravelTimes"/>
            <do_for_each name="$_Station" in="$_Stations">
               <estimate_travel_time ship="$_Ship" start="$_Ship" target="$_Station" result="$_TravelTime"/>
               <append_to_list name="$_StationTravelTimes" exact="[$_Station, $_TravelTime]"/>
            </do_for_each>
            <sort_list list="$_StationTravelTimes" sortbyvalue="loop.element.{2}"/>
            <clear_list list="$_Stations"/>
            <do_for_each name="$_StationTravelTime" in="$_StationTravelTimes">
               <append_to_list name="$_Stations" exact="$_StationTravelTime.{1}"/>
            </do_for_each>
         </do_if>

         <!-- There are no stations available for restocking the required items. Go idle. -->
         <do_if value="$_Stations.count le 0">
            <write_to_logbook category="upkeep" object="$_Ship" interaction="showonmap" title="$_FailedRestockLogTitle" text="{8888888, 51}"/>
            <set_value name="$_Result" exact="'Idle'"/>
            <resume label="FINISH_LBL"/>
         </do_if>

         <set_value name="$_StationWareCheckTable" exact="table[]"/>
         <do_for_each name="$_AmmoMacro" valuename="$_Amount" in="$RESTOCK_AMMO_TABLE">
            <set_value name="$_StationWareCheckTable.{$_AmmoMacro.ware}" exact="$_Amount - $_Ship.ammostorage.{$_AmmoMacro}.count"/>
         </do_for_each>

         <set_value name="$_RestockStation" exact="null"/>
         <do_for_each name="$_Station" in="$_Stations">
            <do_if value="$_Station.hasresourcesfor.{$_StationWareCheckTable}">
               <set_value name="$_RestockStation" exact="$_Station"/>
               <break/>
            </do_if>
         </do_for_each>
         <remove_value name="$_StationWareCheckTable"/>

         <!-- All available stations currently lack the necessary resources to produce the required items. Go idle. -->
         <do_if value="$_RestockStation" exact="null">
            <write_to_logbook category="upkeep" object="$_Ship" interaction="showonmap" title="$_FailedRestockLogTitle" text="{8888888, 52}"/>
            <resume label="FINISH_LBL"/>
         </do_if>

         <set_value name="$_RestockPrice" exact="0Cr"/>
         <do_for_each name="$_AmmoMacro" valuename="$_Amount" in="$RESTOCK_AMMO_TABLE">
            <set_value name="$_RestockPrice" exact="($_RestockStation.buildprice.{$_AmmoMacro.ware} * ($_Amount - $_Ship.ammostorage.{$_AmmoMacro}.count)i)Cr" operation="add"/>
         </do_for_each>

         <!-- We do not have sufficient funds to restock the required items. Go idle. -->
         <do_if value="($_RestockPrice + 100000Cr) gt $_Ship.owner.money">
            <write_to_logbook category="upkeep" object="$_Ship" interaction="showonmap" title="$_FailedRestockLogTitle" text="{8888888, 53}"/>
            <resume label="FINISH_LBL"/>
         </do_if>

         <add_build_to_modify_ship buildobject="$_Ship" object="$_RestockStation" ammo="$RESTOCK_AMMO_TABLE" price="$_RestockPrice" immediate="true" result="$_Result"/>

         <!-- The creation of the restocking command has failed. Go idle. -->
         <do_if value="not $_Result">
            <set_value name="$_ResumeCounter" exact="if not $_ResumeCounter? then 0 else ($_ResumeCounter + 1)"/>
            <do_if value="$_ResumeCounter ge 3">
               <write_to_logbook category="upkeep" object="$_Ship" interaction="showonmap" title="$_FailedRestockLogTitle" text="{8888888, 54}"/>
               <resume label="FINISH_LBL"/>
            </do_if>
            <wait min="5s" max="10s"/>
            <resume label="RESUME_LBL"/>
         </do_if>

         <set_value name="$_Result" exact="'Success'"/>

         <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->

         <label name="FINISH_LBL"/>
         <wait exact="1ms"/>
         <do_if value="$DEBUG gt 0">
            <debug_to_file directory="$_DebugFolderName" name="$_DebugFileName" text="'[' + player.systemtime.{'%F - %X'} + '] ' + '~~ ' + $_DebugScriptName + '.xml ~ SCRIPT_END ~~'"/>
            <debug_to_file directory="$_DebugFolderName" name="$_DebugFileName" text="'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n'"/>
         </do_if>

         <return>
            <retval name="_Result" value="$_Result"/>
         </return>

      </actions>
   </attention>

   <on_abort>
   </on_abort>

</aiscript>